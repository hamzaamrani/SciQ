stages:
  - build
  - test
  - deploy

variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DEV_ENV_IMAGE: $CI_REGISTRY/$CI_PROJECT_PATH/env/test-env:latest
  DOCKER_ANDROID_ENV_IMAGE: $CI_REGISTRY/$CI_PROJECT_PATH/env/android-env:latest
  DOCKER_DRIVER: overlay2
  ANDROID_COMPILE_SDK: "29"
  ANDROID_BUILD_TOOLS: "29.0.2"
  ANDROID_SDK_TOOLS:   "6514223"

# BUILD STAGE

build-webapp:
  stage: build
  image: docker/compose
  script:
    - echo 'build webapp'
    - docker-compose build
  only:
    - sprint2

build-android-env:
  stage: build
  image: docker
  before_script:
    - echo $CI_DEPLOY_PASSWORD | docker login $CI_REGISTRY -u $CI_DEPLOY_USER --password-stdin
  services:
      - docker:dind
  script:
    - docker pull $DOCKER_ANDROID_ENV_IMAGE || true
    - docker build --cache-from $DOCKER_ANDROID_ENV_IMAGE -t $DOCKER_ANDROID_ENV_IMAGE sciq-app/
    - docker push $DOCKER_ANDROID_ENV_IMAGE

build-test-env:
  stage: build
  image: docker
  before_script:
    - echo $CI_DEPLOY_PASSWORD | docker login $CI_REGISTRY -u $CI_DEPLOY_USER --password-stdin
  services:
      - docker:dind
  script:
      - docker pull $DOCKER_DEV_ENV_IMAGE || true
      - docker build --cache-from $DOCKER_DEV_ENV_IMAGE -t $DOCKER_DEV_ENV_IMAGE tests/
      - docker push $DOCKER_DEV_ENV_IMAGE
  only:
  
# TEST STAGE

test-db:
  stage: test
  image: $DOCKER_DEV_ENV_IMAGE
  script:
    - echo 'test db'
    - python3 -m unittest discover tests.db -v

test-parser:
  stage: test
  image: $DOCKER_DEV_ENV_IMAGE
  script:
    - echo 'test parser'
    - python3 -m unittest discover tests.parser -v


test-api-wolfram:
  stage: test
  image: $DOCKER_DEV_ENV_IMAGE
  script:
    - echo 'test api wolfram'
    - python3 -m unittest discover tests.api_wolfram -v


test-services:
  stage: test
  image: $DOCKER_DEV_ENV_IMAGE
  script:
    - echo 'test services'
    - python3 -m unittest discover tests.services -v

# DEPLOY STAGE

deploy-prod:
  stage: deploy
  image: ruby:latest
  before_script:
      - apt-get update -qy
      - apt-get install -y ruby-dev
      - gem install dpl
  script:
      - dpl --provider=heroku --app=sciq-unimib --api-key=$HEROKU_SECRET_KEY
  only:
    - master

deploy-dev:
  stage: deploy
  image: ruby:latest
  before_script:
      - apt-get update -qy
      - apt-get install -y ruby-dev
      - gem install dpl
  script:
      - dpl --provider=heroku --app=sciq-unimib-dev --api-key=$HEROKU_SECRET_KEY
  only:
      - sprint2
      
# deploy-android:
#   stage: deploy
#   image: $DOCKER_ANDROID_ENV_IMAGE
#   script:
#     - cd sciq-app
#     - upload_to_gdrive --folder sciq --file ./app/build/outputs/
      