# Use a fixed version as latest tag doesn't exist
# https://hub.docker.com/r/docker/compose/tags
image:
  name: docker:latest
  entrypoint: ["sh", "-c"]

services:
  - docker:dind

stages:
  - build
  - test
  - deploy

before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY

variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DEV_ENV_IMAGE: $CI_REGISTRY/$CI_PROJECT_PATH/env/test-env:latest
  DOCKER_DRIVER: overlay2


build-webapp:
  stage: build
  services:
    - docker:dind
  before_script:
    - apk add py-pip python-dev libffi-dev openssl-dev gcc libc-dev make && pip install docker-compose
  script:
    - echo 'build webapp'
    - docker-compose build
  only:
    - master

build-test-env:
  stage: build
  services:
      - docker:dind
  script:
      - docker pull $DOCKER_DEV_ENV_IMAGE || true
      - docker build --cache-from $DOCKER_DEV_ENV_IMAGE -t $DOCKER_DEV_ENV_IMAGE tests/
      - docker push $DOCKER_DEV_ENV_IMAGE
  only:
    - master

test-db:
  stage: test
  image: $DOCKER_DEV_ENV_IMAGE
  script:
    - echo 'test db'
    - python3 -m unittest discover tests.db -v
  only:
    - master

test-parser:
  stage: test
  image: $DOCKER_DEV_ENV_IMAGE
  script:
    - echo 'test parser'
    - python3 -m unittest discover tests.parser -v
  only:
    - master
    
test-api-wolfram:
  stage: test
  image: $DOCKER_DEV_ENV_IMAGE
  script:
    - echo 'test api wolfram'
    - python3 -m unittest discover tests.api_wolfram -v
  only:
    - master

test-services:
  stage: test
  image: $DOCKER_DEV_ENV_IMAGE
  script:
    - echo 'test services'
    - python3 -m unittest discover tests.services -v
  only:
    - master

deploy-prod:
  stage: deploy
  image: ruby:latest
  variables:
      STEP : 'production'
  before_script:
      - apt-get update -qy
      - apt-get install -y ruby-dev
      - gem install dpl
      - export STEP=production
  script:
      - dpl --provider=heroku --app=sciq-unimib --api-key=$HEROKU_SECRET_KEY
  only:
      - master

deploy-dev:
  stage: deploy
  image: ruby:latest
  variables:
      STEP : 'staging'
  before_script:
      - apt-get update -qy
      - apt-get install -y ruby-dev
      - gem install dpl
      - export STEP=staging
  script:
      - dpl --provider=heroku --app=sciq-unimib-dev --api-key=$HEROKU_SECRET_KEY
  only:
      - sprint2
        